//
//--------------------------------------------------------------------------------
//          THIS FILE WAS AUTOMATICALLY GENERATED BY THE GENESIS2 ENGINE        
//  FOR MORE INFORMATION: OFER SHACHAM (CHIP GENESIS INC / STANFORD VLSI GROUP)
//    !! THIS VERSION OF GENESIS2 IS NOT FOR ANY COMMERCIAL USE !!
//     FOR COMMERCIAL LICENSE CONTACT SHACHAM@ALUMNI.STANFORD.EDU
//--------------------------------------------------------------------------------
//
//  
//	-----------------------------------------------
//	|            Genesis Release Info             |
//	|  $Change: 11904 $ --- $Date: 2013/08/03 $   |
//	-----------------------------------------------
//	
//
//  Source file: /afs/asu.edu/users/v/s/r/vsriva10/EEE591/HW2/starter-02/primitives/MapReduceReducer.vp
//  Source template: MapReduceReducer
//
// --------------- Begin Pre-Generation Parameters Status Report ---------------
//
//	From 'generate' statement (priority=5):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Command Line input (priority=4):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From XML input (priority=3):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Config File input (priority=2):
//
// ---------------- End Pre-Generation Pramameters Status Report ----------------

//MapReduceReducer.vp
//Verified and Synthesizable

//localparam dest_bits = $clog2(`NUM_USER_RECV_PORTS);
//localparam vc_bits = (`NUM_VCS > 1) ? $clog2(`NUM_VCS) : 1;
//localparam flit_port_width = 2 /*valid and tail bits*/+ `FLIT_DATA_WIDTH + dest_bits + vc_bits;

module MapReduceReducer_unq1 (
	input logic enable,
	input logic [31:0] task_id,
	input logic [5*`DATA_WIDTH-1:0] int_key,
	input logic [5*`DATA_WIDTH-1:0] search_key,
	input logic [31:0] int_value,
	input logic clk,
	input logic rstn,
    output logic [vc_bits:0] put_credits_reducer, // [vc_bits-1+1:0]
    output logic en_put_credits_reducer,
	output logic finish,
	output logic read_request,
	output logic write_request,
	output logic [31:0] result,
	output logic [31:0] read_addr,
	output logic [31:0] write_addr
);

//  logic [2:0]  num_credits;
//	logic [31:0] index;
	logic [31:0] counter;
	logic [31:0] addr;
//	logic [39:0] word;

//Clk can be added just index increment has to be added too and remove for loop
	always @(posedge clk or negedge rstn)
	begin
        if (rstn==0)
        begin
            result=0;
			counter=0;
			addr=0;
			finish=0;
            put_credits_reducer=2'b00;
            en_put_credits_reducer=1'b0;
        end
        else
        begin
            put_credits_reducer=2'b10;
            en_put_credits_reducer=1'b1;
    		if(enable==0)
    		begin
    			counter=0;
    			addr=0;
    			finish=0;
    		end
    
    		if((enable)&&(addr<10))
    		begin
    			read_addr=addr;
    			read_request=1;
    //			if(int_key==search_key)
    //			begin
    //				counter=counter+int_value;
    //			end
    			counter=counter+int_value;
    			result=result+counter;//bw(int_value > counter)
    			addr=addr+1;
    			write_addr=task_id;
    			write_request=1;
    		end
    		//else if ((enable)&&(addr>=100000))
    		//begin
    		//	finish=1;
    		//end
        end // end reset if
	end	

endmodule: MapReduceReducer_unq1

