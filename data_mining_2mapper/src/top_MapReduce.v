//
//--------------------------------------------------------------------------------
//          THIS FILE WAS AUTOMATICALLY GENERATED BY THE GENESIS2 ENGINE        
//  FOR MORE INFORMATION: OFER SHACHAM (CHIP GENESIS INC / STANFORD VLSI GROUP)
//    !! THIS VERSION OF GENESIS2 IS NOT FOR ANY COMMERCIAL USE !!
//     FOR COMMERCIAL LICENSE CONTACT SHACHAM@ALUMNI.STANFORD.EDU
//--------------------------------------------------------------------------------
//
//  
//	-----------------------------------------------
//	|            Genesis Release Info             |
//	|  $Change: 11904 $ --- $Date: 2013/08/03 $   |
//	-----------------------------------------------
//	
//
//  Source file: /afs/asu.edu/users/v/s/r/vsriva10/EEE591/HW2/starter-02/primitives/top_MapReduce.vp
//  Source template: top_MapReduce
//
// --------------- Begin Pre-Generation Parameters Status Report ---------------
//
//	From 'generate' statement (priority=5):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Command Line input (priority=4):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From XML input (priority=3):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Config File input (priority=2):
//
// ---------------- End Pre-Generation Pramameters Status Report ----------------

// top_MapReduce.vp
// A top module has no inputs or outputs
module top_MapReduce ();



///////For Mapper//////////////
logic enable; 
logic task_id;
logic [39:0] key;
logic [7:0] value;
logic clear;
logic clk;
logic tail;
logic finish;
logic read_request;
logic write_request;
logic [39:0] int_key;
logic [31:0] int_value;
logic [31:0] read_addr;
logic [31:0] write_addr;


/*
///For Reducer////////
logic enable; 
logic [31:0] task_id;
logic clk;
logic finish;
logic read_request;
logic write_request;
logic [39:0] int_key;
logic [39:0] search_key;
logic [31:0] int_value;
logic [31:0] read_addr;
logic [31:0] write_addr;
*/

logic rst;

logic triggerStart, triggerStop;
logic foo;


initial begin
//    $dumpfile("dump.vcd");
//    $dumpvars(1, fifo_tb);  
	triggerStart = 1'b0;
	triggerStop = 1'b0;
	#10
	clk=0;
	triggerStart = 1'b1;

///////For Mapper//////////
	clear=1;
	repeat(2) #10 clk=~clk;
	clear=0;
	key="Hello";
	value="o";
	task_id=1;
	tail=0;
	enable=1;
	repeat(2) #10 clk=~clk;
	value="l";
	repeat(2) #10 clk=~clk;
	value="l";
	repeat(2) #10 clk=~clk;
	value="e";
	repeat(2) #10 clk=~clk;
	value="H";
	tail=1;
	repeat(2) #10 clk=~clk;
	tail=0;
	repeat(8) #10 clk=~clk;


//////For Reducer//////////
/*	task_id=1;
	search_key="Hello";
	enable=0;
	repeat(2) #5 clk=~clk;
	enable=1;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="what";
	int_value=34;

	repeat(2) #5 clk=~clk;
	int_key="new";
	int_value=23;

	repeat(2) #5 clk=~clk;
	int_key="Hello";
	int_value=34;

	repeat(2) #5 clk=~clk;

*/
	triggerStop = 1'b1 ;
	#10
    	$finish();
end
// # Then we can instantiate our DUT
// Code your testbench here
// or browse Examples

//Capture the waves in top_conv5.vp
	initial begin
		//if this is a "+wave" run, it must record all signals
		if ( $test$plusargs("wave") ) begin
			$display("%t: Starting Wave Capture", $time);
			// levels, instance
			$vcdpluson (0, my_MapReduce);
			$vcdplusmemon (0, my_MapReduce);
		end
	end //intial begin  
// # Then we can instantiate out DUT

	initial begin
		foo = 1'b0;
		#1
		//$set_gate_level_monitoring("rtl_on");
		//$set_gate_level_monitoring("mda");
		$set_gate_level_monitoring("rtl_on", "sv");
		$set_gate_level_monitoring("rtl_on", "mda");
		#1
		$set_toggle_region(top_MapReduce);
		#1
		@( posedge triggerStart);
		$display( "Starting Toggle Collection");
		$toggle_start();
		#100000000000000000000
		foo = 1'b1;
	end
	
	initial begin
		#1
		@( posedge triggerStart);
		#1
		@(posedge triggerStop);
		$display("Stopping Toggle Collection");
		#1
		$toggle_stop();
		#1
		$toggle_report("top.saif", 1.0e-12, top_MapReduce);
	end

/////////For Mapper///////////////

	MapReduce  my_MapReduce(.enable(enable), .task_id(task_id), .key(key), .value(value), .clear(clear), .tail(tail), .clk(clk), .finish(finish), .read_request(read_request), .write_request(write_request), .int_key(int_key), .int_value(int_value), .read_addr(read_addr), .write_addr(write_addr));


/*
///////For Reducer//////////////////////
	MapReduce  my_MapReduce(.enable(enable), .task_id(task_id), .int_key(int_key), .search_key(search_key), .int_value(int_value), .clk(clk), .finish(finish), .read_request(read_request), .write_request(write_request), .result(result), .read_addr(read_addr), .write_addr(write_addr));
*/

endmodule: top_MapReduce

